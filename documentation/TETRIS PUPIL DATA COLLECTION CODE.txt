TETRIS PUPIL DATA COLLECTION

This is all based off of playOneTetrisGame.m, which as of yet, is the only section of the experiment to successfuly collect eye data. 
=====================================
=====================================
=====================================
	--Exp init--
	
	
% begin eye tings

gazeFile = fullfile(expParams.subjPaths.eyeDir, ...
            sprintf('%s_game%03d_gaze.mat', subjID, gameIdx));

% — a) init gaze buffer with both timestamps —
blockGazeData = struct( ...
'SystemTimeStamp',{}, ...  % Tobii SDK clock
'DeviceTimeStamp',{}, ...  % Tobii device clock
'GazeX',           {}, ...
'GazeY',           {}, ...
'PupilDiaL',       {}, ...
'PupilDiaR',       {} );
    tRecordingStart = NaN;
    tRecordingEnd   = NaN;

if ~demoMode
    % — b) subscribe & flush any errors —
    subResult = eyetracker.get_gaze_data();
    if isa(subResult,'StreamError')
        warning('Tobii subscription error: %s', subResult.Message);
    end
    pause(0.2);                   % let the stream start
    eyetracker.get_gaze_data();   % clear junk

    % — c) mark "recording" start with timestamp only —
    % tRecordingStart = eyetracker.get_system_time_stamp();
    tGameStart      = GetSecs;
end


if ~demoMode
    % flush stray samples & catch errors
    raw0 = eyetracker.get_gaze_data();
    if isa(raw0,'StreamError')
        warning('Pre-loop gaze flush error: %s', raw0.Message);
    end
end	
	
=====================================
	--Collection-- 
	
if ~demoMode
    raw = eyetracker.get_gaze_data();
    if isa(raw,'StreamError')
        warning('Mid-loop gaze error: %s', raw.Message);
        raw = [];
    end
    for i = 1:numel(raw)
        s = raw(i);

        blockGazeData(end+1) = struct( ...
    'SystemTimeStamp', s.SystemTimeStamp, ...
    'DeviceTimeStamp', s.DeviceTimeStamp, ...
    'GazeX',           s.LeftEye.GazePoint.OnDisplayArea(1), ...
    'GazeY',           s.LeftEye.GazePoint.OnDisplayArea(2), ...
    'PupilDiaL',       s.LeftEye.Pupil.Diameter, ...
    'PupilDiaR',       s.RightEye.Pupil.Diameter ...
);

    end
end	

=====================================	
	--Clean up & Save--
	

    if ~demoMode
        % — final pull & error‐check —
        rawF = eyetracker.get_gaze_data();
        if isa(rawF,'StreamError')
            warning('Final gaze error: %s', rawF.Message);
            rawF = [];
        end

        for i = 1:numel(rawF)
            s = rawF(i);

            % handle possible missing eye data
            if isfield(s, 'LeftEye') && ~isempty(s.LeftEye) && isfield(s.LeftEye, 'GazePoint') && isfield(s.LeftEye.GazePoint, 'OnDisplayArea')
                gazeX = s.LeftEye.GazePoint.OnDisplayArea(1);
                gazeY = s.LeftEye.GazePoint.OnDisplayArea(2);
                pupL  = s.LeftEye.Pupil.Diameter;
            else
                gazeX = NaN;
                gazeY = NaN;
                pupL  = NaN;
            end

            if isfield(s, 'RightEye') && ~isempty(s.RightEye) && isfield(s.RightEye, 'Pupil')
                pupR = s.RightEye.Pupil.Diameter;
            else
                pupR = NaN;
            end

            blockGazeData(end+1) = struct( ...
                'SystemTimeStamp', s.SystemTimeStamp, ...
                'DeviceTimeStamp', s.DeviceTimeStamp, ...
                'GazeX',           gazeX, ...
                'GazeY',           gazeY, ...
                'PupilDiaL',       pupL, ...
                'PupilDiaR',       pupR ...
                );
        end


        % — stop recording & stamp Tobii clock at end —
        % eyetracker.stop_recording();
        % tRecordingEnd = eyetracker.get_system_time_stamp();
        tRecordingEnd = GetSecs;
    else
        WaitSecs(1);  % demo stub
        tRecordingEnd = GetSecs;
    end
	
	
    % — compute QC loss metrics —
    lossL = mean([blockGazeData.PupilDiaL] == 0);
    lossR = mean([blockGazeData.PupilDiaR] == 0);
	
	
	% save gaze file 
    save(gazeFile, ... % named @ top of script 
        'blockGazeData', ...
        'tRecordingStart', ...
        'tRecordingEnd', ...
        'lossL', 'lossR', ...
        'demoMode', ...
        '-v7.3');